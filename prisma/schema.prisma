
generator client {
  provider = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["public", "maturidade_gestao", "maturidade_empresarial", "posicionamento_estrategico", "valuation"]
}

model User {
  id            Int         @id @default(autoincrement())
  email         String
  nome          String
  cargo         String?
  empresa       String
  segmento      String
  telefone      String
  faturamento   Float
  created_at    DateTime    @default(now())

  @@map("usuarios")
  @@schema("public")
}

model UserMaturidadeGestao {
  id            String         @id @default(uuid())
  email         String
  nome          String
  empresa       String
  segmento      String
  telefone      String
  faturamento   Float
  created_at    DateTime    @default(now())
  respostas     AnswerMaturidadeGestao[] @relation("UserMaturidadeGestaoAnswers")

  @@map("usuarios")
  @@schema("maturidade_gestao")
}

model AnswerMaturidadeGestao {
  id              Int       @id @default(autoincrement())
  pergunta_id     Int
  resposta        String
  usuario_id      String
  created_at      DateTime  @default(now())
  user            UserMaturidadeGestao @relation("UserMaturidadeGestaoAnswers", fields: [usuario_id], references: [id])

  @@map("respostas")
  @@schema("maturidade_gestao")
}

model UserMaturidadeEmpresarial {
  id            String         @id @default(uuid())
  email         String
  nome          String
  empresa       String
  segmento      String
  telefone      String
  faturamento   Float
  created_at    DateTime    @default(now())
  respostas     AnswerMaturidadeEmpresarial[] @relation("UserMaturidadeEmpresarialAnswers")

  @@map("usuarios")
  @@schema("maturidade_empresarial")
}

model AnswerMaturidadeEmpresarial {
  id              Int       @id @default(autoincrement())
  pergunta_id     Int
  resposta        String
  usuario_id      String
  created_at      DateTime  @default(now())
  user            UserMaturidadeEmpresarial @relation("UserMaturidadeEmpresarialAnswers", fields: [usuario_id], references: [id])

  @@map("respostas")
  @@schema("maturidade_empresarial")
}

model UserPosEst {
  id            Int         @id @default(autoincrement())
  email         String
  nome          String
  empresa       String
  segmento      String
  telefone      String
  faturamento   Float
  created_at    DateTime    @default(now())
  respostas     AnswerPosEst[] @relation("UserPosEstAnswers")

  @@map("usuarios")
  @@schema("posicionamento_estrategico")
}

model AnswerPosEst {
  id              Int       @id @default(autoincrement())
  pergunta_id     Int
  pontuacao       Int
  usuario_id      Int
  created_at      DateTime  @default(now())
  user            UserPosEst @relation("UserPosEstAnswers", fields: [usuario_id], references: [id])

  @@map("respostas")
  @@schema("posicionamento_estrategico")
}

model UserValuation {
  id                String         @id @default(uuid())
  email             String
  nome              String
  empresa           String
  segmento          String
  telefone          String
  created_at        DateTime    @default(now())
  dados_financeiros DataValuation[] @relation("UserValuationData")

  @@map("usuarios")
  @@schema("valuation")
}

model DataValuation {
  id                Int           @id @default(autoincrement())
  usuario_id        String        @unique
  colaboradores     Int           
  receita_anual     Float
  ebitda_anual      Float
  receita_ttm       Float
  ebitda_ttm        Float
  divida_bruta      Float
  disponibilidade   Float
  segmento          Int
  created_at        DateTime      @default(now())
  updated_at        DateTime      @updatedAt
  user              UserValuation @relation("UserValuationData", fields: [usuario_id], references: [id])
  
  @@map("dados_financeiros")
  @@schema("valuation")
}
